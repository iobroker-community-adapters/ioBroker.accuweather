{
  "version": 3,
  "sources": ["../../src/lib/nexthour-obj.ts"],
  "sourcesContent": ["import type Accuweather from '../main';\n\nexport async function createSummaryObjects(adapter: Accuweather): Promise<void> {\n    const obj = (await import('../../lib/summaryObject.json')) as unknown as {\n        default: {\n            [key: string]: ioBroker.StateObject;\n        };\n    };\n    await adapter.extendObject('Summary', {\n        type: 'channel',\n        common: {\n            name: 'Weather Summary',\n        },\n        native: {},\n    });\n    const _obj = Object.assign({}, obj.default);\n\n    for (const key in _obj) {\n        const k = key as keyof typeof _obj;\n        const stateObj = _obj[k];\n        if (stateObj && stateObj.common && stateObj.common.unit) {\n            stateObj.common.unit = metric2Imperial(adapter, stateObj.common.unit);\n        }\n        await adapter.extendObject(key, stateObj);\n    }\n}\n\nexport async function createNextHourForecatObjects(hour: string, adapter: Accuweather): Promise<void> {\n    const obj = await import('../../lib/nextHourObject.json');\n    await adapter.extendObject(`Hourly.h${hour}`, {\n        type: 'channel',\n        common: {\n            name: `Hour ${hour} Forecast`,\n        },\n        native: {},\n    });\n    const _obj = Object.assign({}, obj.default) as unknown as {\n        [key: string]: ioBroker.StateObject;\n    };\n\n    for (const k in _obj) {\n        const key = k as keyof typeof _obj;\n        const measure: any = {};\n        const nkey = String(key).replace('nextHour', `Hourly.h${hour}`);\n        const role = _obj[key].common.role;\n        _obj[key].common.unit = metric2Imperial(adapter, _obj[key].common.unit);\n        measure[nkey] = Object.assign({}, _obj[key]);\n        measure[nkey].common = Object.assign({}, _obj[key].common);\n        if (measure[nkey].common.role) {\n            measure[nkey].common.role = `${role}.forecast.${hour}`;\n        }\n        adapter.log.debug(`key: ${nkey}, role:${JSON.stringify(measure[nkey].common.role)}, base: ${role}`);\n        await adapter.extendObject(nkey, measure[nkey]);\n    }\n}\n\nexport async function createCurrentConditionObjects(adapter: Accuweather): Promise<void> {\n    const obj = (await import('../../lib/currentCondObject.json')) as unknown as {\n        default: {\n            [key: string]: ioBroker.StateObject;\n        };\n    };\n    await adapter.extendObject('Current', {\n        type: 'channel',\n        common: {\n            name: 'Current Conditions',\n        },\n        native: {},\n    });\n\n    for (const key in obj.default) {\n        const k = key as keyof typeof obj.default;\n        const stateObj = obj.default[k];\n        if (stateObj && stateObj.common && stateObj.common.unit) {\n            stateObj.common.unit = metric2Imperial(adapter, stateObj.common.unit);\n        }\n\n        await adapter.extendObject(key.replace('nextHour', 'Current'), stateObj);\n    }\n}\n\nexport async function createDailyForecastObjects(adapter: Accuweather): Promise<void> {\n    const obj = await import('../../lib/DailyObject.json');\n    for (let i = 1; i <= 5; i++) {\n        await adapter.extendObject(`Daily.Day${i}`, {\n            type: 'channel',\n            common: {\n                name: `Day ${i} Forecast`,\n            },\n            native: {},\n        });\n        const _obj = Object.assign({}, obj.default) as unknown as {\n            [key: string]: ioBroker.StateObject;\n        };\n\n        for (const k in _obj) {\n            const key = k as keyof typeof _obj;\n            const measure: any = {};\n            let nkey = '';\n            const role = _obj[key].common.role;\n            _obj[key].common.unit = metric2Imperial(adapter, _obj[key].common.unit);\n            if (!String(key).indexOf('dayPart.')) {\n                nkey = String(key).replace('dayn.', `Day${i}.`);\n                measure[nkey] = Object.assign({}, _obj[key]);\n                measure[nkey].common = Object.assign({}, _obj[key].common);\n                if (measure[nkey].common.role) {\n                    measure[nkey].common.role = `${role}.forecast.${i - 1}`;\n                }\n                await adapter.extendObject(nkey, measure[nkey]);\n            } else {\n                ['Day', 'Night'].forEach(dp => {\n                    nkey = String(key).replace('dayn.', `Day${i}.`).replace('dayPart.', `${dp}.`);\n                    measure[nkey] = Object.assign({}, _obj[key]);\n                    measure[nkey].common = Object.assign({}, _obj[key].common);\n                    if (measure[nkey].common.role) {\n                        measure[nkey].common.role = `${role}.forecast.${i - 1}`;\n                    }\n                    adapter.extendObject(nkey, measure[nkey]).catch(() => {});\n                });\n            }\n        }\n    }\n}\n\nexport async function createHourlyForecastObjects(adapter: Accuweather): Promise<void> {\n    for (let hr = 0; hr < 24; hr++) {\n        await createNextHourForecatObjects(String(hr), adapter);\n    }\n}\n\nfunction metric2Imperial(adapter: Accuweather, unit: string | undefined): string | undefined {\n    if (unit === undefined || adapter.config.metric === 'Metric') {\n        return unit;\n    }\n    switch (unit) {\n        case '\u00B0C':\n            return 'F';\n        case 'km/h':\n            return 'mi/h';\n        case 'km':\n            return 'mi';\n        case 'm':\n            return 'ft';\n        case 'mb':\n            return 'inHg';\n        case 'mm':\n            return 'in';\n        default:\n            return unit;\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
